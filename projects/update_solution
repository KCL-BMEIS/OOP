#!/bin/bash

if [[ $1 == "help" ]]; then
  cat <<EOH
Usage: 

- update solutions for all projects to latest version:
  $ $0

- update data for all projects to latest version:
  $ $0 data

- update solutions to specific version (get version checksum from history):
  $ $0 2d6b147

- display this help page:
  $ $0 help
EOH
exit 1
fi

user=kcl-bmeis
repo=oop

what=solution
[[ $1 == "data" ]] && { what="data"; shift; }

# get_folder_listing branch root_folder subfolder
get_folder_listing() {
  # Avoid using GitHub API due to rate limiting restrictions:
  curl --silent https://github.com/$user/$repo/tree/$1/$2/$3 | while read -r line; do
    [[ "$line" =~ \"tree\":\{\"items\":\[([^\]]*)\] ]] || continue;
    items=${BASH_REMATCH[1]};
    while [[ "$items" =~ ^[^\}]*\"path\":\"([^\"]*)[^\}]*\"contentType\":\"([^\"]*)[^\}]*\} ]]; do
      if [[ ${BASH_REMATCH[2]} == "directory" ]]; then
        get_folder_listing $1 $2 ${BASH_REMATCH[1]#"$2"}
      else
        echo ${BASH_REMATCH[1]}
      fi
      items="${items#"${BASH_REMATCH[0]}"}";
    done;
  done
}

# update_project_files branch project_folder [SHA1]
update_project_files() {
  branch=${3:-$1}
  for filename in $(get_folder_listing $branch projects/$2 $what); do
    local_filename=${filename#projects/}
    echo updating $local_filename
    curl --silent --create-dirs --output $local_filename https://raw.githubusercontent.com/$user/$repo/$branch/$filename
  done
}

update_project_files shotgun_sequencing_solution DNA_shotgun_sequencing $1
update_project_files fmri_solution fMRI $1
update_project_files robot_solution robot_arm $1



